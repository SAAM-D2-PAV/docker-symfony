# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        # spécifier des arguments avec des valeurs par défaut pour l'ensemble des services
        # 
        bind:
          $logFile: 'logs/logs.txt'
        # exemple inutile car le service Logger de symfony n'a pas besoin d'être spécifié ici pour fonctionner
        # pour spécifier un service utiliser '@mon_service'
          $logger: '@logger'
    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # Définition d'un argument $logFile qui sera ensuite automatiquement passé au service. 
    # Ainsi, dans le service MyLog.php, nous pouvons récupérer l'argument dans le constructeur de la classe et l'utiliser directement : 
    App\Service\MyLog:
        arguments:
            $logFile: 'logs/logs.txt'